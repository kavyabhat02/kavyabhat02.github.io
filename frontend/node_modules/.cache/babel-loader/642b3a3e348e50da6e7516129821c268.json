{"ast":null,"code":"var _jsxFileName = \"/home/kavya/NITK/DBMS_Project/frontend/src/components/SignupForm.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport axios from \"axios\";\nimport \"./styles/SignupForm.css\";\nimport \"./styles/general.css\";\nimport qs from 'qs';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst initialForm = Object.freeze({\n  username: \"\",\n  password: \"\"\n});\n\nconst SignupForm = () => {\n  _s();\n\n  const [formData, updateFormData] = useState(initialForm); //console.log(formData);\n\n  const [signup, signupForm] = useState();\n  const [signupMessage, setSignupMessage] = useState();\n\n  const handleChange = e => {\n    updateFormData({ ...formData,\n      [e.target.name]: e.target.value.trim()\n    });\n  };\n\n  const submitResponse = e => {\n    e.preventDefault();\n    axios.post(\"http://localhost:8000/api/auth/register/\", qs.stringify(formData), {\n      headers: {\n        \"Content-Type\": \"application/x-www-form-urlencoded\"\n      },\n      formData: qs.stringify(formData)\n    }).then(resp => {\n      if (resp.status === 201) {\n        console.log(\"Signed up successfully\");\n      } else if (resp.status === 401) {\n        console.log(\"Signup failed\");\n      }\n\n      setSignupMessage(resp.data.message);\n      console.log(setSignupMessage);\n    });\n  };\n\n  const validateForm = () => {\n    return signup != null;\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"SignupForm\",\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      children: [\"Username:\", /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"username\",\n        name: \"username\",\n        required: true,\n        onChange: handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this), \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 19\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 24\n      }, this), \"Password:\", /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        name: \"password\",\n        required: true,\n        onChange: handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this), \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 16\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: submitResponse,\n        children: \"Signup\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 5\n  }, this);\n};\n\n_s(SignupForm, \"tjktAYY/CBGUu+A7cZzonraiq2o=\");\n\n_c = SignupForm;\nexport default SignupForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"SignupForm\");","map":{"version":3,"sources":["/home/kavya/NITK/DBMS_Project/frontend/src/components/SignupForm.jsx"],"names":["React","useState","axios","qs","initialForm","Object","freeze","username","password","SignupForm","formData","updateFormData","signup","signupForm","signupMessage","setSignupMessage","handleChange","e","target","name","value","trim","submitResponse","preventDefault","post","stringify","headers","then","resp","status","console","log","data","message","validateForm"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAO,yBAAP;AACA,OAAO,sBAAP;AACA,OAAOC,EAAP,MAAe,IAAf;;AAEA,MAAMC,WAAW,GAAGC,MAAM,CAACC,MAAP,CAAc;AAChCC,EAAAA,QAAQ,EAAC,EADuB;AAEhCC,EAAAA,QAAQ,EAAC;AAFuB,CAAd,CAApB;;AAKA,MAAMC,UAAU,GAAG,MAAM;AAAA;;AACvB,QAAM,CAACC,QAAD,EAAWC,cAAX,IAA6BV,QAAQ,CAACG,WAAD,CAA3C,CADuB,CAEvB;;AAEA,QAAM,CAACQ,MAAD,EAASC,UAAT,IAAuBZ,QAAQ,EAArC;AACA,QAAM,CAACa,aAAD,EAAgBC,gBAAhB,IAAoCd,QAAQ,EAAlD;;AAGA,QAAMe,YAAY,GAAIC,CAAD,IAAO;AAE1BN,IAAAA,cAAc,CAAC,EACb,GAAGD,QADU;AAEb,OAACO,CAAC,CAACC,MAAF,CAASC,IAAV,GAAiBF,CAAC,CAACC,MAAF,CAASE,KAAT,CAAeC,IAAf;AAFJ,KAAD,CAAd;AAID,GAND;;AAQA,QAAMC,cAAc,GAAIL,CAAD,IAAO;AAC5BA,IAAAA,CAAC,CAACM,cAAF;AAGArB,IAAAA,KAAK,CACFsB,IADH,CACQ,0CADR,EACoDrB,EAAE,CAACsB,SAAH,CAAaf,QAAb,CADpD,EAC4E;AACxEgB,MAAAA,OAAO,EAAE;AACP,wBAAgB;AADT,OAD+D;AAIxEhB,MAAAA,QAAQ,EAAEP,EAAE,CAACsB,SAAH,CAAaf,QAAb;AAJ8D,KAD5E,EAOGiB,IAPH,CAOSC,IAAD,IAAU;AACd,UAAIA,IAAI,CAACC,MAAL,KAAgB,GAApB,EAAyB;AACvBC,QAAAA,OAAO,CAACC,GAAR,CAAY,wBAAZ;AACD,OAFD,MAGK,IAAIH,IAAI,CAACC,MAAL,KAAgB,GAApB,EAAyB;AAC5BC,QAAAA,OAAO,CAACC,GAAR,CAAY,eAAZ;AACD;;AACDhB,MAAAA,gBAAgB,CAACa,IAAI,CAACI,IAAL,CAAUC,OAAX,CAAhB;AACAH,MAAAA,OAAO,CAACC,GAAR,CAAYhB,gBAAZ;AACD,KAhBH;AAmBD,GAvBD;;AAyBA,QAAMmB,YAAY,GAAG,MAAM;AACzB,WAAOtB,MAAM,IAAI,IAAjB;AACD,GAFD;;AAIA,sBACE;AAAK,IAAA,SAAS,EAAC,YAAf;AAAA,2BACE;AAAA,2CAEE;AACE,QAAA,IAAI,EAAC,UADP;AACkB,QAAA,IAAI,EAAC,UADvB;AACkC,QAAA,QAAQ,MAD1C;AAC2C,QAAA,QAAQ,EAAEI;AADrD;AAAA;AAAA;AAAA;AAAA,cAFF,oBAIY;AAAA;AAAA;AAAA;AAAA,cAJZ,eAIiB;AAAA;AAAA;AAAA;AAAA,cAJjB,4BAME;AACE,QAAA,IAAI,EAAC,UADP;AACkB,QAAA,IAAI,EAAC,UADvB;AACkC,QAAA,QAAQ,MAD1C;AAC2C,QAAA,QAAQ,EAAEA;AADrD;AAAA;AAAA;AAAA;AAAA,cANF,eASE;AAAA;AAAA;AAAA;AAAA,cATF,oBASS;AAAA;AAAA;AAAA;AAAA,cATT,eAUE;AAAQ,QAAA,OAAO,EAAEM,cAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAVF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAkBD,CA/DD;;GAAMb,U;;KAAAA,U;AAiEN,eAAeA,UAAf","sourcesContent":["import React, { useState } from \"react\";\nimport axios from \"axios\";\nimport \"./styles/SignupForm.css\";\nimport \"./styles/general.css\";\nimport qs from 'qs'\n\nconst initialForm = Object.freeze({\n  username:\"\",\n  password:\"\"\n});\n\nconst SignupForm = () => {\n  const [formData, updateFormData] = useState(initialForm);\n  //console.log(formData);\n\n  const [signup, signupForm] = useState();\n  const [signupMessage, setSignupMessage] = useState();\n  \n\n  const handleChange = (e) => {\n\n    updateFormData({\n      ...formData, \n      [e.target.name]: e.target.value.trim()\n    });\n  };\n\n  const submitResponse = (e) => {\n    e.preventDefault();\n    \n\n    axios\n      .post(\"http://localhost:8000/api/auth/register/\", qs.stringify(formData), {\n        headers: {\n          \"Content-Type\": \"application/x-www-form-urlencoded\",\n        },\n        formData: qs.stringify(formData),\n      })\n      .then((resp) => {\n        if (resp.status === 201) {\n          console.log(\"Signed up successfully\");\n        }\n        else if (resp.status === 401) {\n          console.log(\"Signup failed\");\n        }\n        setSignupMessage(resp.data.message);\n        console.log(setSignupMessage);\n      });\n\n      \n  }; \n \n  const validateForm = () => {\n    return signup != null;\n  };\n\n  return (\n    <div className=\"SignupForm\">\n      <form>\n        Username: \n        <input\n          type=\"username\" name=\"username\" required onChange={handleChange}\n        ></input> <br/><br/>\n        Password:\n        <input\n          type=\"password\" name=\"password\" required onChange={handleChange}\n        ></input>\n        <br /> <br />\n        <button onClick={submitResponse}>\n          Signup\n        </button>\n      </form>\n    </div>\n  );\n};\n\nexport default SignupForm;\n"]},"metadata":{},"sourceType":"module"}